---
import { ViewTransitions } from "astro:transitions";
interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/images/screenshot-dark.png" } = Astro.props;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />
<link rel="canonical" href={canonicalURL} />
<script defer is:inline>
	!(function () {
		var e = window.matchMedia("(prefers-color-scheme: dark)").matches;
		var t = localStorage.getItem("isDarkMode") || "auto";
		if (t === "true" || (e && t !== "false")) {
			document.documentElement.classList.toggle("dark", !0);
		}
	})();
</script>
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:site_name" content={Astro.site} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />
<link rel="sitemap" type="application/xml" href="/sitemap-index.xml" />
<style is:global>
	* {
		scroll-behavior: smooth;
	}

	::-webkit-scrollbar {
		width: 6px;
	}
	::-webkit-scrollbar:horizontal {
		height: 6px;
	}
	::-webkit-scrollbar-track,
	::-webkit-scrollbar-corner {
		background: var(--c-bg);
		border-radius: 10px;
	}
	::-webkit-scrollbar-thumb {
		background: var(--c-scrollbar);
		border-radius: 10px;
	}
	::-webkit-scrollbar-thumb:hover {
		background: var(--c-scrollbar-hover);
	}

	@media (prefers-reduced-motion: no-preference) {
		html:not(.no-sliding) [slide-enter],
		html:not(.no-sliding) .slide-enter,
		html:not(.no-sliding) .slide-enter-content > *:not(:has(.table-of-contents)) {
			--enter-stage: 0;
			--enter-step: 90ms;
			--enter-initial: 0ms;
			animation: slide-enter 1s both 1;
			animation-delay: calc(var(--enter-initial) + var(--enter-stage) * var(--enter-step));
		}

		.slide-enter-content > *:nth-child(1) {
			--enter-stage: 1 !important;
		}
		.slide-enter-content > *:nth-child(2) {
			--enter-stage: 2 !important;
		}
		.slide-enter-content > *:nth-child(3) {
			--enter-stage: 3 !important;
		}
		.slide-enter-content > *:nth-child(4) {
			--enter-stage: 4 !important;
		}
		.slide-enter-content > *:nth-child(5) {
			--enter-stage: 5 !important;
		}
		.slide-enter-content > *:nth-child(6) {
			--enter-stage: 6 !important;
		}
		.slide-enter-content > *:nth-child(7) {
			--enter-stage: 7 !important;
		}
		.slide-enter-content > *:nth-child(8) {
			--enter-stage: 8 !important;
		}
		.slide-enter-content > *:nth-child(9) {
			--enter-stage: 9 !important;
		}
		.slide-enter-content > *:nth-child(10) {
			--enter-stage: 10 !important;
		}
		.slide-enter-content > *:nth-child(11) {
			--enter-stage: 11 !important;
		}
		.slide-enter-content > *:nth-child(12) {
			--enter-stage: 12 !important;
		}
		.slide-enter-content > *:nth-child(13) {
			--enter-stage: 13 !important;
		}
		.slide-enter-content > *:nth-child(14) {
			--enter-stage: 14 !important;
		}
		.slide-enter-content > *:nth-child(15) {
			--enter-stage: 15 !important;
		}
		.slide-enter-content > *:nth-child(16) {
			--enter-stage: 16 !important;
		}
		.slide-enter-content > *:nth-child(17) {
			--enter-stage: 17 !important;
		}
		.slide-enter-content > *:nth-child(18) {
			--enter-stage: 18 !important;
		}
		.slide-enter-content > *:nth-child(19) {
			--enter-stage: 19 !important;
		}
		.slide-enter-content > *:nth-child(20) {
			--enter-stage: 20 !important;
		}
	}

	::view-transition-old(root),
	::view-transition-new(root) {
		animation: none;
		mix-blend-mode: normal;
	}
	::view-transition-old(root) {
		z-index: 1;
	}
	::view-transition-new(root) {
		z-index: 9999;
	}
	.dark::view-transition-old(root) {
		z-index: 9999;
	}
	.dark::view-transition-new(root) {
		z-index: 1;
	}

	@keyframes slide-enter {
		0% {
			transform: translateY(10px);
			opacity: 0;
		}

		to {
			transform: translateY(0);
			opacity: 1;
		}
	}

	.prose :where(pre, code):not(:where(.not-prose, .not-prose *)) {
		border-radius: 8px;
		background-color: #353841;
		padding: 0.125rem;
		margin: 0 0.125rem;
	}

	.prose :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::before,
	.prose :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::after {
		content: " ";
	}
</style>
<ViewTransitions />
